[gd_scene load_steps=18 format=2]

[ext_resource path="res://assets/sprites/character/placeholder.png" type="Texture" id=1]
[ext_resource path="res://assets/sprites/character/placeholder-parry.png" type="Texture" id=2]
[ext_resource path="res://assets/sprites/character/placeholder-dash.png" type="Texture" id=3]
[ext_resource path="res://scenes/characters/Dash.gd" type="Script" id=4]
[ext_resource path="res://scenes/characters/Move.gd" type="Script" id=5]
[ext_resource path="res://scenes/characters/Idle.gd" type="Script" id=6]

[sub_resource type="GDScript" id=2]
script/source = "extends \"res://scripts/state_machine.gd\"

onready var stateMachine = $AnimationTree.get(\"parameters/playback\")
var lastMovementAxis = Vector2

func _ready():
	states_map = {
		\"idle\": $States/Idle,
		\"move\": $States/Move,
		\"dash\": $States/Dash,
	}

func _change_state(state_name):
	if not _active:
		return
	if state_name in [\"dash\"]:
		states_stack.push_front(states_map[state_name])
	if state_name == \"dash\" and current_state == $Move:
		$Dash.initialize($Move.speed, $Move.velocity)
	._change_state(state_name)

func _input(event):
	\"\"\"
	Here we only handle input that can interrupt states, attacking in this case
	otherwise we let the state node handle it
	\"\"\"
	if event.is_action_pressed(\"attack\"):
		if current_state == $Attack:
			return
		_change_state(\"attack\")
		return
	current_state.handle_input(event)
"

[sub_resource type="CapsuleShape2D" id=1]
radius = 37.9997
height = 118.001

[sub_resource type="AnimationNodeAnimation" id=8]
animation = "dash"

[sub_resource type="AnimationNodeAnimation" id=9]
animation = "idle"

[sub_resource type="AnimationNodeStateMachineTransition" id=10]

[sub_resource type="AnimationNodeStateMachineTransition" id=11]

[sub_resource type="AnimationNodeStateMachine" id=6]
states/dash/node = SubResource( 8 )
states/dash/position = Vector2( 467, 87 )
states/idle/node = SubResource( 9 )
states/idle/position = Vector2( 287, 88.3333 )
transitions = [ "idle", "dash", SubResource( 10 ), "dash", "idle", SubResource( 11 ) ]
start_node = "idle"

[sub_resource type="AnimationNodeStateMachinePlayback" id=7]

[sub_resource type="Animation" id=5]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ ExtResource( 1 ) ]
}

[sub_resource type="Animation" id=4]
resource_name = "dash"
length = 0.4
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ ExtResource( 2 ), ExtResource( 3 ), ExtResource( 1 ) ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.1, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [  ],
"method": "disableParry"
}, {
"args": [  ],
"method": "disableDash"
} ]
}

[sub_resource type="Animation" id=3]
resource_name = "idle"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 1 ) ]
}

[node name="Character" type="KinematicBody2D"]
script = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 2, 0 )
texture = ExtResource( 1 )

[node name="Collision" type="CollisionShape2D" parent="."]
position = Vector2( 0, 92 )
rotation = 1.5708
shape = SubResource( 1 )

[node name="Camera2D" type="Camera2D" parent="."]

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource( 6 )
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/playback = SubResource( 7 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "idle"
anims/RESET = SubResource( 5 )
anims/dash = SubResource( 4 )
anims/idle = SubResource( 3 )

[node name="States" type="Node2D" parent="."]

[node name="Move" type="Node2D" parent="States"]
script = ExtResource( 5 )

[node name="Dash" type="Node2D" parent="States"]
script = ExtResource( 4 )

[node name="Idle" type="Node2D" parent="States"]
script = ExtResource( 6 )
